
apiVersion: apps/v1
kind: Deployment
metadata:
  name: libreddit
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: libreddit
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: libreddit
    spec:
      containers:
        - image: quay.io/redlib/redlib:latest
          imagePullPolicy: Always
          name: libreddit
          ports:
            - containerPort: 8080
---
# manifests/test-zone/libreddit/libreddit-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: libreddit
  namespace: default
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: libreddit
---
# manifests/test-zone/libreddit/libreddit-httproute.yaml
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: libreddit
  namespace: default
spec:
  parentRefs:
  - name: external
    namespace: gateway
    sectionName: https
  hostnames:
  - "libreddit.<path:stringreplacesecret#domain>" 
  rules:
  - backendRefs:
    - name: libreddit
      port: 8080
---
# manifests/test-zone/libreddit/libreddit-dnsendpoint.yaml
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: libreddit
  namespace: default
  annotations:
    external-dns.custom/type: public
spec:
  endpoints:
    - dnsName: libreddit.<path:stringreplacesecret#domain> 
      recordType: CNAME
      targets:
        - ingress.<path:stringreplacesecret#domain> 
      providerSpecific:
        - name: external-dns.alpha.kubernetes.io/cloudflare-proxied
          value: "true"
